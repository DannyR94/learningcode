/* This class effect everything in the document */
/* 
* {
    margin: 0;
    padding: 0;
} 
*/

/* Colors can be entered one of the following:
Color Names - red, blue, purple, etc.
HTML5 Color Names - coral, misty rose, etc.
Hexadecimal - #f4f4f4 which is a light gray
RBG - (0,0,225) which is (red,green,blue)*/
/* Refer both measurements_absolutes.png and measurements_relitives.png for a list of the different units of measure that can be used. */
body{
    background-color: #f4f4f4;
    color:#555555;

    /* See web_safe_fonts.png for a reference on what fonts can be used without the need to import special files */
    /* Defines the type on font */
    /* Times New Roman is the defualt font */
    font-family: Arial, Helvetica, sans-serif;
    /* Defines the font size  */
    /* Defualt is 16px */
    font-size: 16px;
    /* Sets font thickness. Values from 100 to 900 are accepted. */
    /* 400 is defualt and 700 is bold */
    font-weight: 400;

    /* Packing all the attributes into one line. */
    /* font: normal 16px Arial, Helvetica, sans-serif; */

    /* Defines the space between lines of text */
    line-height: 1.6em;
}
a{
    text-decoration: none;
    color: #000000;   
}
/* This effects the links when they are hovered over */
a:hover{
    color: red;
}
/* This effects links when you click on them */
a:active{
    color: green;
}
/* This effects links that have already been visited */
/* a:visited{
    color: purple;
} */
/* This clears any floats */
.clr{
    clear:both;
}
.container{
    width: 80%;
    margin: auto;
}
.button{
    background-color: #333;
    color: #fff;
    padding: 10px 5px;
    border: none;
}
.button:hover{
    background: red;
    color: white;
}
/* You need to use a " . " when defining a class*/
.box-1{
background-color: #333333;
color:#ffffff;
/* Refer to box_model.png for diagram of the Box Model */
padding: 5px 10px;
border-right: 5px red solid;
border-top: 10px blue solid;
border-left: 5px red solid;
border-bottom: 25px green solid;
margin-top: 20px;
}
/* This targets any "h1" that is within a "box-1" class */
.box-1 h1{
    font-family: Tahoma;
    font-weight: 800;
    font-style: italic;
    text-decoration: underline;
    text-transform: uppercase;
    letter-spacing: 0.2em;
}
.box-2 {
    border: 3px dotted #cccccc;
    padding: 20px;
    margin: 20px 0;
}
/* border-raduis is used to curve the edges */
.categories{
    border: 1px #cccccc solid;
    padding: 10px;
    border-radius: 15px;
}
.categories h2{
    text-align: center;
}
/* By defualt lists have about 40px of padding */
.categories ul{
    padding: 0px;
    padding-left: 20px;
    list-style: none;  
}
.categories li{
    padding-bottom: 8px;
    /* The order the attributes are entered doesn't seemd to matter */
    border-bottom: dotted #333333 1px;
    /* There doesn't seem to be a way to resize images using html/css code */
    list-style-image: url(images/checkmark.png);
}
.my-form{
    padding: 20px;
}
.my-form .form-group{
    padding-bottom: 15px;
}
.my-form label{
    display: block;
}
/* This is targeting only inputs with the types of "text" and "textarea". Thus the button input is uneffected here. */
.my-form input[type="text"], .my-form textarea{
    padding: 8px;
    width: 100%;
}
/* There is already a global style for buttons, but I'm leaving this here as an example */
/* .my-form input[type="submit"]{
    background-color: #333;
    color: #fff;
    padding: 10px 5px;
    border: none;
} */
.block{
    float: left;
    width: 33.3%;
    border: 1px solid #000;
    pad: 10px;
    /* This attribute takes into account border, padding, etc and makes it fit into the specified width */
    box-sizing: border-box;
}
/* "id"s used a # instead of a . */
#main-block{
    float: left;
    width: 70%;
    padding: 15px;
    box-sizing: border-box;
}
#side-bar{
    float: right;
    width: 30%;
    background-color: #333;
    color: #fff;
    padding: 15px;
    box-sizing: border-box;
}
/* Positioning in CSS */
/* position: static; is not positioned in any special way and follows the normal document flow. Static elements are now effected by top, bottom, left, and right properties. Static is the defualt position. */
/* position: relitive; is positioned relitive to its normal position. Other content will not be adjusted to fit into any gap left by the element. */
/* position: fixed; is positioned relitive to the viewport, this means that it stays in place even if the page is scrolled. Fixed elements do not leave gaps where they normally would have been located. */
/* position: absolute; is positioned relative to the nearest positioned ancestor. If an absolute positioned element has no positioned ancestors, it uses the document body, and will move along with the page scrolling. */
/* position: sticky; is positioned based on the user's scroll position. Sticky elements toggle between relative and fixed, depending on the scroll position. Think of a nav bar that starts bellow a site's banner but sticks to the top of the page when scrolling down. */
.p-box{
    width: 800px;
    height: 500px;
    border: 1px solid #000;
    margin-top: 30px;
    position: relative;
    background-image: url(images/stonks.jpg);
    background-repeat: no-repeat;
    background-position: 200px 200px;
    background-size: 200px 200px;
}
.p-box h1{
    position: absolute;
    top: 100px;
    left: 200px;
}
.p-box h2{
    position: absolute;
    bottom: 40px;
    right: 100px;
}
.fix-me {
    position: fixed;
    top: 400px;
    left: 20px;
}
/* pseudo classes are used to define a special state of an element*/
/* refer to https://www.w3schools.com/css/css_pseudo_classes.asp for a list of all the pseudo classes as there are a lot of them */
.my-list li:nth-child(odd){
    background: pink;
}
.my-list li:nth-child(even){
    background: green;
}
/* By utilizing "load order" the following pseudo classes overwrite the previous ones */
.my-list li:first-child{
    background: red;
}
.my-list li:last-child{
    background: blue;
}